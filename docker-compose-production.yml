networks:
  kafka-cluster:
    name: kafka-cluster
    driver: bridge

services:
  app:
    container_name: streamkafka
    image: streamkafka:${STREAMKAFKA_VERSION}
    build: .
    ports:
      - "8080:8080"
    depends_on:
      - kafka
    networks:
      - kafka-cluster
  zookeeper:
    image: zookeeper:${ZOOKEEPER_VERSION}
    ports:
      - '31000:31000'
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_PORT}
      ZOOKEEPER_TICK_TIME: 2000
      KAFKA_JMX_HOSTNAME: "localhost"
      KAFKA_JMX_PORT: 31000
    container_name: zookeeper
    networks:
      - kafka-cluster

  kafka:
    image: bitnami/kafka:${KAFKA_VERSION}
    ports:
      - "9092:9092"
      - "31001:31001"
    expose:
      - "9093"
    depends_on:
      - zookeeper
    environment:
      KAFKA_CFG_BROKER_ID: 1
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:${ZOOKEEPER_PORT}
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: CLIENT
      KAFKA_CFG_LISTENERS: CLIENT://kafka:9093,EXTERNAL://0.0.0.0:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: CLIENT://kafka:9093,EXTERNAL://localhost:9092
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_CFG_NUM_PARTITIONS: 3
    container_name: kafka
    networks:
      - kafka-cluster
  kafdrop:
    image: obsidiandynamics/kafdrop:${KAFDROP_VERSION}
    container_name: kafdrop
    ports:
      - 9000:9000
    environment:
      - KAFKA_BROKERCONNECT=kafka:9093
    depends_on:
      - kafka
    networks:
      - kafka-cluster
